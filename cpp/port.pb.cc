// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: port.proto
// Protobuf C++ Version: 6.30.1

#include "port.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace pmx {
namespace grpc {
template <typename>
PROTOBUF_CONSTEXPR ListPortsRequest::ListPortsRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(ListPortsRequest_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct ListPortsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListPortsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListPortsRequestDefaultTypeInternal() {}
  union {
    ListPortsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListPortsRequestDefaultTypeInternal _ListPortsRequest_default_instance_;

inline constexpr ListPort::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        alias_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        group_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        dsp_format_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        audio_channel_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_{0u},
        node_id_{0u},
        direction_{static_cast< ::pmx::grpc::PortDirection >(0)},
        physical_{false},
        is_monitor_{false},
        object_serial_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR ListPort::ListPort(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ListPort_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ListPortDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListPortDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListPortDefaultTypeInternal() {}
  union {
    ListPort _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListPortDefaultTypeInternal _ListPort_default_instance_;

inline constexpr ListPortsResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : ports_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ListPortsResponse::ListPortsResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ListPortsResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ListPortsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListPortsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListPortsResponseDefaultTypeInternal() {}
  union {
    ListPortsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListPortsResponseDefaultTypeInternal _ListPortsResponse_default_instance_;
}  // namespace grpc
}  // namespace pmx
static const ::_pb::EnumDescriptor* PROTOBUF_NONNULL
    file_level_enum_descriptors_port_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_port_2eproto = nullptr;
const ::uint32_t
    TableStruct_port_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::pmx::grpc::ListPort, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::pmx::grpc::ListPort, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::pmx::grpc::ListPort, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::pmx::grpc::ListPort, _impl_.node_id_),
        PROTOBUF_FIELD_OFFSET(::pmx::grpc::ListPort, _impl_.object_serial_),
        PROTOBUF_FIELD_OFFSET(::pmx::grpc::ListPort, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::pmx::grpc::ListPort, _impl_.direction_),
        PROTOBUF_FIELD_OFFSET(::pmx::grpc::ListPort, _impl_.physical_),
        PROTOBUF_FIELD_OFFSET(::pmx::grpc::ListPort, _impl_.alias_),
        PROTOBUF_FIELD_OFFSET(::pmx::grpc::ListPort, _impl_.group_),
        PROTOBUF_FIELD_OFFSET(::pmx::grpc::ListPort, _impl_.path_),
        PROTOBUF_FIELD_OFFSET(::pmx::grpc::ListPort, _impl_.dsp_format_),
        PROTOBUF_FIELD_OFFSET(::pmx::grpc::ListPort, _impl_.audio_channel_),
        PROTOBUF_FIELD_OFFSET(::pmx::grpc::ListPort, _impl_.is_monitor_),
        6,
        7,
        11,
        0,
        8,
        9,
        1,
        2,
        3,
        4,
        5,
        10,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::pmx::grpc::ListPortsRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::pmx::grpc::ListPortsResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::pmx::grpc::ListPortsResponse, _impl_.ports_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 20, -1, sizeof(::pmx::grpc::ListPort)},
        {32, -1, -1, sizeof(::pmx::grpc::ListPortsRequest)},
        {40, -1, -1, sizeof(::pmx::grpc::ListPortsResponse)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::pmx::grpc::_ListPort_default_instance_._instance,
    &::pmx::grpc::_ListPortsRequest_default_instance_._instance,
    &::pmx::grpc::_ListPortsResponse_default_instance_._instance,
};
const char descriptor_table_protodef_port_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\nport.proto\022\010pmx.grpc\"\365\001\n\010ListPort\022\n\n\002i"
    "d\030\002 \001(\r\022\017\n\007node_id\030\003 \001(\r\022\025\n\robject_seria"
    "l\030\013 \001(\r\022\014\n\004name\030\001 \001(\t\022*\n\tdirection\030\004 \001(\016"
    "2\027.pmx.grpc.PortDirection\022\020\n\010physical\030\005 "
    "\001(\010\022\r\n\005alias\030\006 \001(\t\022\r\n\005group\030\007 \001(\t\022\014\n\004pat"
    "h\030\010 \001(\t\022\022\n\ndsp_format\030\t \001(\t\022\025\n\raudio_cha"
    "nnel\030\n \001(\t\022\022\n\nis_monitor\030\014 \001(\010\"\022\n\020ListPo"
    "rtsRequest\"6\n\021ListPortsResponse\022!\n\005ports"
    "\030\001 \003(\0132\022.pmx.grpc.ListPort*-\n\rPortDirect"
    "ion\022\006\n\002IN\020\000\022\007\n\003OUT\020\001\022\013\n\007UNKNOWN\020\002b\006proto"
    "3"
};
static ::absl::once_flag descriptor_table_port_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_port_2eproto = {
    false,
    false,
    401,
    descriptor_table_protodef_port_2eproto,
    "port.proto",
    &descriptor_table_port_2eproto_once,
    nullptr,
    0,
    3,
    schemas,
    file_default_instances,
    TableStruct_port_2eproto::offsets,
    file_level_enum_descriptors_port_2eproto,
    file_level_service_descriptors_port_2eproto,
};
namespace pmx {
namespace grpc {
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL PortDirection_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_port_2eproto);
  return file_level_enum_descriptors_port_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t PortDirection_internal_data_[] = {
    196608u, 0u, };
// ===================================================================

class ListPort::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ListPort>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ListPort, _impl_._has_bits_);
};

ListPort::ListPort(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ListPort_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:pmx.grpc.ListPort)
}
PROTOBUF_NDEBUG_INLINE ListPort::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::pmx::grpc::ListPort& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        name_(arena, from.name_),
        alias_(arena, from.alias_),
        group_(arena, from.group_),
        path_(arena, from.path_),
        dsp_format_(arena, from.dsp_format_),
        audio_channel_(arena, from.audio_channel_) {}

ListPort::ListPort(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ListPort& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ListPort_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ListPort* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, object_serial_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::object_serial_));

  // @@protoc_insertion_point(copy_constructor:pmx.grpc.ListPort)
}
PROTOBUF_NDEBUG_INLINE ListPort::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        name_(arena),
        alias_(arena),
        group_(arena),
        path_(arena),
        dsp_format_(arena),
        audio_channel_(arena) {}

inline void ListPort::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           0,
           offsetof(Impl_, object_serial_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::object_serial_));
}
ListPort::~ListPort() {
  // @@protoc_insertion_point(destructor:pmx.grpc.ListPort)
  SharedDtor(*this);
}
inline void ListPort::SharedDtor(MessageLite& self) {
  ListPort& this_ = static_cast<ListPort&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.alias_.Destroy();
  this_._impl_.group_.Destroy();
  this_._impl_.path_.Destroy();
  this_._impl_.dsp_format_.Destroy();
  this_._impl_.audio_channel_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ListPort::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ListPort(arena);
}
constexpr auto ListPort::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ListPort),
                                            alignof(ListPort));
}
constexpr auto ListPort::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ListPort_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ListPort::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ListPort>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ListPort::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ListPort>(), &ListPort::ByteSizeLong,
              &ListPort::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ListPort, _impl_._cached_size_),
          false,
      },
      &ListPort::kDescriptorMethods,
      &descriptor_table_port_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        ListPort_class_data_ =
            ListPort::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL ListPort::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ListPort_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ListPort_class_data_.tc_table);
  return ListPort_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 12, 0, 75, 2>
ListPort::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ListPort, _impl_._has_bits_),
    0, // no _extensions_
    12, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294963200,  // skipmap
    offsetof(decltype(_table_), field_entries),
    12,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ListPort_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::pmx::grpc::ListPort>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ListPort, _impl_.name_)}},
    // uint32 id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ListPort, _impl_.id_), 6>(),
     {16, 6, 0, PROTOBUF_FIELD_OFFSET(ListPort, _impl_.id_)}},
    // uint32 node_id = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ListPort, _impl_.node_id_), 7>(),
     {24, 7, 0, PROTOBUF_FIELD_OFFSET(ListPort, _impl_.node_id_)}},
    // .pmx.grpc.PortDirection direction = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ListPort, _impl_.direction_), 8>(),
     {32, 8, 0, PROTOBUF_FIELD_OFFSET(ListPort, _impl_.direction_)}},
    // bool physical = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ListPort, _impl_.physical_), 9>(),
     {40, 9, 0, PROTOBUF_FIELD_OFFSET(ListPort, _impl_.physical_)}},
    // string alias = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 1, 0, PROTOBUF_FIELD_OFFSET(ListPort, _impl_.alias_)}},
    // string group = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 2, 0, PROTOBUF_FIELD_OFFSET(ListPort, _impl_.group_)}},
    // string path = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 3, 0, PROTOBUF_FIELD_OFFSET(ListPort, _impl_.path_)}},
    // string dsp_format = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 4, 0, PROTOBUF_FIELD_OFFSET(ListPort, _impl_.dsp_format_)}},
    // string audio_channel = 10;
    {::_pbi::TcParser::FastUS1,
     {82, 5, 0, PROTOBUF_FIELD_OFFSET(ListPort, _impl_.audio_channel_)}},
    // uint32 object_serial = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ListPort, _impl_.object_serial_), 11>(),
     {88, 11, 0, PROTOBUF_FIELD_OFFSET(ListPort, _impl_.object_serial_)}},
    // bool is_monitor = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ListPort, _impl_.is_monitor_), 10>(),
     {96, 10, 0, PROTOBUF_FIELD_OFFSET(ListPort, _impl_.is_monitor_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(ListPort, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 id = 2;
    {PROTOBUF_FIELD_OFFSET(ListPort, _impl_.id_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 node_id = 3;
    {PROTOBUF_FIELD_OFFSET(ListPort, _impl_.node_id_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // .pmx.grpc.PortDirection direction = 4;
    {PROTOBUF_FIELD_OFFSET(ListPort, _impl_.direction_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // bool physical = 5;
    {PROTOBUF_FIELD_OFFSET(ListPort, _impl_.physical_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // string alias = 6;
    {PROTOBUF_FIELD_OFFSET(ListPort, _impl_.alias_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string group = 7;
    {PROTOBUF_FIELD_OFFSET(ListPort, _impl_.group_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string path = 8;
    {PROTOBUF_FIELD_OFFSET(ListPort, _impl_.path_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string dsp_format = 9;
    {PROTOBUF_FIELD_OFFSET(ListPort, _impl_.dsp_format_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string audio_channel = 10;
    {PROTOBUF_FIELD_OFFSET(ListPort, _impl_.audio_channel_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 object_serial = 11;
    {PROTOBUF_FIELD_OFFSET(ListPort, _impl_.object_serial_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // bool is_monitor = 12;
    {PROTOBUF_FIELD_OFFSET(ListPort, _impl_.is_monitor_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\21\4\0\0\0\0\5\5\4\12\15\0\0\0\0\0"
    "pmx.grpc.ListPort"
    "name"
    "alias"
    "group"
    "path"
    "dsp_format"
    "audio_channel"
  }},
};
PROTOBUF_NOINLINE void ListPort::Clear() {
// @@protoc_insertion_point(message_clear_start:pmx.grpc.ListPort)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.alias_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.group_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _impl_.path_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _impl_.dsp_format_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _impl_.audio_channel_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x000000c0u) != 0) {
    ::memset(&_impl_.id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.node_id_) -
        reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.node_id_));
  }
  if ((cached_has_bits & 0x00000f00u) != 0) {
    ::memset(&_impl_.direction_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.object_serial_) -
        reinterpret_cast<char*>(&_impl_.direction_)) + sizeof(_impl_.object_serial_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ListPort::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ListPort& this_ = static_cast<const ListPort&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ListPort::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ListPort& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:pmx.grpc.ListPort)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_name().empty()) {
      const std::string& _s = this_._internal_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "pmx.grpc.ListPort.name");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // uint32 id = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000040u) != 0) {
    if (this_._internal_id() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          2, this_._internal_id(), target);
    }
  }

  // uint32 node_id = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000080u) != 0) {
    if (this_._internal_node_id() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          3, this_._internal_node_id(), target);
    }
  }

  // .pmx.grpc.PortDirection direction = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000100u) != 0) {
    if (this_._internal_direction() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          4, this_._internal_direction(), target);
    }
  }

  // bool physical = 5;
  if ((this_._impl_._has_bits_[0] & 0x00000200u) != 0) {
    if (this_._internal_physical() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          5, this_._internal_physical(), target);
    }
  }

  // string alias = 6;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_alias().empty()) {
      const std::string& _s = this_._internal_alias();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "pmx.grpc.ListPort.alias");
      target = stream->WriteStringMaybeAliased(6, _s, target);
    }
  }

  // string group = 7;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!this_._internal_group().empty()) {
      const std::string& _s = this_._internal_group();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "pmx.grpc.ListPort.group");
      target = stream->WriteStringMaybeAliased(7, _s, target);
    }
  }

  // string path = 8;
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (!this_._internal_path().empty()) {
      const std::string& _s = this_._internal_path();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "pmx.grpc.ListPort.path");
      target = stream->WriteStringMaybeAliased(8, _s, target);
    }
  }

  // string dsp_format = 9;
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (!this_._internal_dsp_format().empty()) {
      const std::string& _s = this_._internal_dsp_format();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "pmx.grpc.ListPort.dsp_format");
      target = stream->WriteStringMaybeAliased(9, _s, target);
    }
  }

  // string audio_channel = 10;
  if ((this_._impl_._has_bits_[0] & 0x00000020u) != 0) {
    if (!this_._internal_audio_channel().empty()) {
      const std::string& _s = this_._internal_audio_channel();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "pmx.grpc.ListPort.audio_channel");
      target = stream->WriteStringMaybeAliased(10, _s, target);
    }
  }

  // uint32 object_serial = 11;
  if ((this_._impl_._has_bits_[0] & 0x00000800u) != 0) {
    if (this_._internal_object_serial() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          11, this_._internal_object_serial(), target);
    }
  }

  // bool is_monitor = 12;
  if ((this_._impl_._has_bits_[0] & 0x00000400u) != 0) {
    if (this_._internal_is_monitor() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          12, this_._internal_is_monitor(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pmx.grpc.ListPort)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ListPort::ByteSizeLong(const MessageLite& base) {
  const ListPort& this_ = static_cast<const ListPort&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ListPort::ByteSizeLong() const {
  const ListPort& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:pmx.grpc.ListPort)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // string name = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_name());
      }
    }
    // string alias = 6;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_alias().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_alias());
      }
    }
    // string group = 7;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!this_._internal_group().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_group());
      }
    }
    // string path = 8;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (!this_._internal_path().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_path());
      }
    }
    // string dsp_format = 9;
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (!this_._internal_dsp_format().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_dsp_format());
      }
    }
    // string audio_channel = 10;
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (!this_._internal_audio_channel().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_audio_channel());
      }
    }
    // uint32 id = 2;
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (this_._internal_id() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_id());
      }
    }
    // uint32 node_id = 3;
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (this_._internal_node_id() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_node_id());
      }
    }
  }
  if ((cached_has_bits & 0x00000f00u) != 0) {
    // .pmx.grpc.PortDirection direction = 4;
    if ((cached_has_bits & 0x00000100u) != 0) {
      if (this_._internal_direction() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_direction());
      }
    }
    // bool physical = 5;
    if ((cached_has_bits & 0x00000200u) != 0) {
      if (this_._internal_physical() != 0) {
        total_size += 2;
      }
    }
    // bool is_monitor = 12;
    if ((cached_has_bits & 0x00000400u) != 0) {
      if (this_._internal_is_monitor() != 0) {
        total_size += 2;
      }
    }
    // uint32 object_serial = 11;
    if ((cached_has_bits & 0x00000800u) != 0) {
      if (this_._internal_object_serial() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_object_serial());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ListPort::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ListPort*>(&to_msg);
  auto& from = static_cast<const ListPort&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:pmx.grpc.ListPort)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_name().empty()) {
        _this->_internal_set_name(from._internal_name());
      } else {
        if (_this->_impl_.name_.IsDefault()) {
          _this->_internal_set_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_alias().empty()) {
        _this->_internal_set_alias(from._internal_alias());
      } else {
        if (_this->_impl_.alias_.IsDefault()) {
          _this->_internal_set_alias("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!from._internal_group().empty()) {
        _this->_internal_set_group(from._internal_group());
      } else {
        if (_this->_impl_.group_.IsDefault()) {
          _this->_internal_set_group("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (!from._internal_path().empty()) {
        _this->_internal_set_path(from._internal_path());
      } else {
        if (_this->_impl_.path_.IsDefault()) {
          _this->_internal_set_path("");
        }
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (!from._internal_dsp_format().empty()) {
        _this->_internal_set_dsp_format(from._internal_dsp_format());
      } else {
        if (_this->_impl_.dsp_format_.IsDefault()) {
          _this->_internal_set_dsp_format("");
        }
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (!from._internal_audio_channel().empty()) {
        _this->_internal_set_audio_channel(from._internal_audio_channel());
      } else {
        if (_this->_impl_.audio_channel_.IsDefault()) {
          _this->_internal_set_audio_channel("");
        }
      }
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (from._internal_id() != 0) {
        _this->_impl_.id_ = from._impl_.id_;
      }
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (from._internal_node_id() != 0) {
        _this->_impl_.node_id_ = from._impl_.node_id_;
      }
    }
  }
  if ((cached_has_bits & 0x00000f00u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      if (from._internal_direction() != 0) {
        _this->_impl_.direction_ = from._impl_.direction_;
      }
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      if (from._internal_physical() != 0) {
        _this->_impl_.physical_ = from._impl_.physical_;
      }
    }
    if ((cached_has_bits & 0x00000400u) != 0) {
      if (from._internal_is_monitor() != 0) {
        _this->_impl_.is_monitor_ = from._impl_.is_monitor_;
      }
    }
    if ((cached_has_bits & 0x00000800u) != 0) {
      if (from._internal_object_serial() != 0) {
        _this->_impl_.object_serial_ = from._impl_.object_serial_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ListPort::CopyFrom(const ListPort& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pmx.grpc.ListPort)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ListPort::InternalSwap(ListPort* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.alias_, &other->_impl_.alias_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.group_, &other->_impl_.group_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.path_, &other->_impl_.path_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.dsp_format_, &other->_impl_.dsp_format_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.audio_channel_, &other->_impl_.audio_channel_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListPort, _impl_.object_serial_)
      + sizeof(ListPort::_impl_.object_serial_)
      - PROTOBUF_FIELD_OFFSET(ListPort, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata ListPort::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ListPortsRequest::_Internal {
 public:
};

ListPortsRequest::ListPortsRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, ListPortsRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:pmx.grpc.ListPortsRequest)
}
ListPortsRequest::ListPortsRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ListPortsRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, ListPortsRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ListPortsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:pmx.grpc.ListPortsRequest)
}

inline void* PROTOBUF_NONNULL ListPortsRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ListPortsRequest(arena);
}
constexpr auto ListPortsRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ListPortsRequest),
                                            alignof(ListPortsRequest));
}
constexpr auto ListPortsRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ListPortsRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ListPortsRequest::MergeImpl,
          ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<ListPortsRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ListPortsRequest::SharedDtor,
          ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<ListPortsRequest>(), &ListPortsRequest::ByteSizeLong,
              &ListPortsRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ListPortsRequest, _impl_._cached_size_),
          false,
      },
      &ListPortsRequest::kDescriptorMethods,
      &descriptor_table_port_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        ListPortsRequest_class_data_ =
            ListPortsRequest::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL ListPortsRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ListPortsRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ListPortsRequest_class_data_.tc_table);
  return ListPortsRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2>
ListPortsRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ListPortsRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::pmx::grpc::ListPortsRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, // no field_entries, or aux_entries
  {{
  }},
};







::google::protobuf::Metadata ListPortsRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ListPortsResponse::_Internal {
 public:
};

ListPortsResponse::ListPortsResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ListPortsResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:pmx.grpc.ListPortsResponse)
}
PROTOBUF_NDEBUG_INLINE ListPortsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::pmx::grpc::ListPortsResponse& from_msg)
      : ports_{visibility, arena, from.ports_},
        _cached_size_{0} {}

ListPortsResponse::ListPortsResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ListPortsResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ListPortsResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ListPortsResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:pmx.grpc.ListPortsResponse)
}
PROTOBUF_NDEBUG_INLINE ListPortsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : ports_{visibility, arena},
        _cached_size_{0} {}

inline void ListPortsResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ListPortsResponse::~ListPortsResponse() {
  // @@protoc_insertion_point(destructor:pmx.grpc.ListPortsResponse)
  SharedDtor(*this);
}
inline void ListPortsResponse::SharedDtor(MessageLite& self) {
  ListPortsResponse& this_ = static_cast<ListPortsResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ListPortsResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ListPortsResponse(arena);
}
constexpr auto ListPortsResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ListPortsResponse, _impl_.ports_) +
          decltype(ListPortsResponse::_impl_.ports_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ListPortsResponse), alignof(ListPortsResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ListPortsResponse::PlacementNew_,
                                 sizeof(ListPortsResponse),
                                 alignof(ListPortsResponse));
  }
}
constexpr auto ListPortsResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ListPortsResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ListPortsResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ListPortsResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ListPortsResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ListPortsResponse>(), &ListPortsResponse::ByteSizeLong,
              &ListPortsResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ListPortsResponse, _impl_._cached_size_),
          false,
      },
      &ListPortsResponse::kDescriptorMethods,
      &descriptor_table_port_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        ListPortsResponse_class_data_ =
            ListPortsResponse::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL ListPortsResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ListPortsResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ListPortsResponse_class_data_.tc_table);
  return ListPortsResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
ListPortsResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ListPortsResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::pmx::grpc::ListPortsResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .pmx.grpc.ListPort ports = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ListPortsResponse, _impl_.ports_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .pmx.grpc.ListPort ports = 1;
    {PROTOBUF_FIELD_OFFSET(ListPortsResponse, _impl_.ports_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::pmx::grpc::ListPort>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void ListPortsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:pmx.grpc.ListPortsResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ports_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ListPortsResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ListPortsResponse& this_ = static_cast<const ListPortsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ListPortsResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ListPortsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:pmx.grpc.ListPortsResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .pmx.grpc.ListPort ports = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_ports_size());
       i < n; i++) {
    const auto& repfield = this_._internal_ports().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pmx.grpc.ListPortsResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ListPortsResponse::ByteSizeLong(const MessageLite& base) {
  const ListPortsResponse& this_ = static_cast<const ListPortsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ListPortsResponse::ByteSizeLong() const {
  const ListPortsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:pmx.grpc.ListPortsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .pmx.grpc.ListPort ports = 1;
    {
      total_size += 1UL * this_._internal_ports_size();
      for (const auto& msg : this_._internal_ports()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ListPortsResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ListPortsResponse*>(&to_msg);
  auto& from = static_cast<const ListPortsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:pmx.grpc.ListPortsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_ports()->MergeFrom(
      from._internal_ports());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ListPortsResponse::CopyFrom(const ListPortsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pmx.grpc.ListPortsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ListPortsResponse::InternalSwap(ListPortsResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.ports_.InternalSwap(&other->_impl_.ports_);
}

::google::protobuf::Metadata ListPortsResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace grpc
}  // namespace pmx
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_port_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
